// Grid
//
// Using flexbox for the grid, inspired by Philip Walton:
// http://philipwalton.github.io/solved-by-flexbox/demos/grids/
// By default each .col within a .row will evenly take up
// available width, and the height of each .col with take
// up the height of the tallest .col in the same .row.
//
// Styleguide 3.1


// Row
//
// Classname is used to designate, surprise, a row.
//
// .row-wrap   - Children can be flowed on multiple lines
// .row + .row - Remove the top space when there are two rows besides each other
//
// Styleguide.3.1.1
.row {
  display: flex;
  padding: ($grid-padding-width / 2);
  width: 100%;
}

.row-wrap {
  flex-wrap: wrap;
}

.row + .row {
  margin-top: ($grid-padding-width / 2) * -1;
  padding-top: 0;
}

// Vertically Align Columns
//
// Another trick up flexbox's sleeve is the ability to easily vertically align columns.
// Vertical alignment includes top, center and bottom, and can be applied to every column in a row.
//
// .row-top       - Align columns to top
// .row-bottom    - Align columns to bottom
// .row-center    - Align columns to center based on the tallest
// .row-strech    - Force columns to the same height
// .row-baseline  - Align columns on their baseline
//
// Styleguide.3.1.2
.row-top {
  align-items: flex-start;
}
.row-bottom {
  align-items: flex-end;
}
.row-center {
  align-items: center;
}
.row-stretch {
  align-items: stretch;
}
.row-baseline {
  align-items: baseline;
}


// Column
//
// Simply add columns you want in a row, and they'll evenly take up the available space.
// If you want three columns, add three columns, if you want five columns, add five columns.
//
// .col-top       - Align individual column to top
// .col-bottom    - Align individual column to bottom
// .col-center    - Align individual column to center based on the tallest
//
// Styleguide.3.1.3
.col {
  flex: 1;
  display: block;
  padding: ($grid-padding-width / 2);
  width: 100%;
}

.col-top {
  align-self: flex-start;
}
.col-bottom {
  align-self: flex-end;
}
.col-center {
  align-self: center;
}


// Column Size
//
// By default each grid column will evenly distribute across the grid.
// However, you can specify individual columns to take up a certain size of the available area
//
// .col-*       - Size the column in * percent
//
// | Column Size      | Percentage Classnames   |
// | ---------------- | ----------------------- |
// | .col-10          | 10%                     |
// | .col-20          | 20%                     |
// | .col-25          | 25%                     |
// | .col-33          | 33.3333%                |
// | .col-50          | 50%                     |
// | .col-67          | 66.6666%                |
// | .col-75          | 75%                     |
// | .col-80          | 80%                     |
// | .col-90          | 90%                     |
//
// Styleguide.3.1.4
.col-10 {
  flex: 0, 0, 10%;
  max-width: 10%;
}
.col-20 {
  flex: 0, 0, 20%;
  max-width: 20%;
}
.col-25 {
  flex: 0, 0, 25%;
  max-width: 25%;
}
.col-33, .col-34 {
  flex: 0, 0, 33.3333%;
  max-width: 33.3333%;
}
.col-50 {
  flex: 0, 0, 50%;
  max-width: 50%;
}
.col-66, .col-67 {
  flex: 0, 0, 66.6666%;
  max-width: 66.6666%;
}
.col-75 {
  flex: 0, 0, 75%;
  max-width: 75%;
}
.col-80 {
  flex: 0, 0, 80%;
  max-width: 80%;
}
.col-90 {
  flex: 0, 0, 90%;
  max-width: 90%;
}

// Column Offset
//
// Columns can also be offset from the left.
//
// .col-offset-*       - Offset Size the column in * percent
//
// | Offset Column  | Percentage Classnames |
// |----------------|-----------------------|
// | .col-offset-10 | 10%                   |
// | .col-offset-20 | 20%                   |
// | .col-offset-25 | 25%                   |
// | .col-offset-33 | 33.3333%              |
// | .col-offset-50 | 50%                   |
// | .col-offset-67 | 66.6666%              |
// | .col-offset-75 | 75%                   |
// | .col-offset-80 | 80%                   |
// | .col-offset-90 | 90%                   |
//
// Styleguide.3.1.5
.col-offset-10 {
  margin-left: 10%;
}
.col-offset-20 {
  margin-left: 20%;
}
.col-offset-25 {
  margin-left: 25%;
}
.col-offset-33, .col-offset-34 {
  margin-left: 33.3333%;
}
.col-offset-50 {
  margin-left: 50%;
}
.col-offset-66, .col-offset-67 {
  margin-left: 66.6666%;
}
.col-offset-75 {
  margin-left: 75%;
}
.col-offset-80 {
  margin-left: 80%;
}
.col-offset-90 {
  margin-left: 90%;
}


// Responsive Grid Classess
//
// There may be cases where a row of columns will not fit nicely in the available area. 
// The responsive classes can be used to turn each column in a row into its own row at certain breakpoints.
//
//
// | Responsive Class | Break when roughly            |
// | ---------------- | ----------------------------- |
// | .responsive-sm   | Smaller than landscape phone  |
// | .responsive-md   | Smaller than portrait tablet  |
// | .responsive-lg   | Smaller than landscape tablet |
//
// Styleguide.3.1.7
@include responsive-grid-break('.responsive-sm', $grid-responsive-sm-break);
@include responsive-grid-break('.responsive-md', $grid-responsive-md-break);
@include responsive-grid-break('.responsive-lg', $grid-responsive-lg-break);
